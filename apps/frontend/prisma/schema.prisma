generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model AccomplishmentOrg {
  id          Int       @id @default(autoincrement())
  profileId   Int
  orgName     String?
  title       String?
  description String?
  startsAt    DateTime?
  endsAt      DateTime?
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model Activity {
  id             Int     @id @default(autoincrement())
  profileId      Int
  activityStatus String?
  link           String?
  title          String?
  Profile        Profile @relation(fields: [profileId], references: [id])
}

model Article {
  id            Int       @id @default(autoincrement())
  profileId     Int
  title         String?
  link          String?
  publishedDate DateTime?
  author        String?
  imageUrl      String?
  Profile       Profile   @relation(fields: [profileId], references: [id])
}

model CandidateStage {
  id                  Int     @id @default(autoincrement())
  profileId           Int
  jobId               Int
  stage               Stage
  categoryScore       Float?
  comfortZoneScore    Float?
  overallScore        Float?
  stabilityScore      Float?
  recentCategoryScore Float?
  Job                 Job     @relation(fields: [jobId], references: [id])
  Profile             Profile @relation(fields: [profileId], references: [id])

  @@unique([profileId, jobId])
}

model Category {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique
  CompanyProductCategory CompanyProductCategory[]
}

model Certification {
  id            Int       @id @default(autoincrement())
  profileId     Int
  authority     String?
  displaySource String?
  endsAt        DateTime?
  licenseNumber String?
  name          String?
  startsAt      DateTime?
  url           String?
  Profile       Profile   @relation(fields: [profileId], references: [id])
}

model Client {
  id   Int     @id @default(autoincrement())
  name String? @unique
  Job  Job[]
}

model Company {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique
  targetMarketSize       String
  targetVertical         String
  size                   CompanySize?
  CompanyProductCategory CompanyProductCategory[]
  Product                Product[]
}

model CompanyProductCategory {
  id         Int      @id @default(autoincrement())
  companyId  Int
  productId  Int
  categoryId Int
  percentage Int
  Category   Category @relation(fields: [categoryId], references: [id])
  Company    Company  @relation(fields: [companyId], references: [id])
  Product    Product  @relation(fields: [productId], references: [id])

  @@unique([companyId, productId, categoryId])
}

model Course {
  id        Int     @id @default(autoincrement())
  profileId Int
  name      String?
  number    String?
  Profile   Profile @relation(fields: [profileId], references: [id])
}

model Education {
  id                          Int       @id @default(autoincrement())
  profileId                   Int
  school                      String
  degree_name                 String
  field_of_study              String?
  starts_at                   DateTime?
  ends_at                     DateTime?
  description                 String?
  activities_and_societies    String?
  grade                       String?
  logo_url                    String?
  school_linkedin_profile_url String?
  Profile                     Profile   @relation(fields: [profileId], references: [id])
}

model Experience {
  id                           Int       @id @default(autoincrement())
  profileId                    Int
  company                      String
  title                        String
  description                  String?
  location                     String?
  starts_at                    DateTime?
  ends_at                      DateTime?
  company_linkedin_profile_url String?
  logo_url                     String?
  Profile                      Profile   @relation(fields: [profileId], references: [id])
}

model Group {
  id            Int     @id @default(autoincrement())
  profileId     Int
  profilePicUrl String?
  name          String?
  url           String?
  Profile       Profile @relation(fields: [profileId], references: [id])
}

model HonourAward {
  id          Int       @id @default(autoincrement())
  profileId   Int
  title       String?
  issuer      String?
  issuedOn    DateTime?
  description String?
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model Job {
  id             Int              @id @default(autoincrement())
  clientId       Int?
  department     String?
  businessUnit   String?
  hiringTeam     String[]
  title          String?
  salary         Int?
  currency       String?
  openSince      DateTime?
  createdAt      DateTime?        @default(now())
  updatedAt      DateTime?
  userId         String?
  description    String?
  CandidateStage CandidateStage[]
  Client         Client?          @relation(fields: [clientId], references: [id])
  Profile        Profile[]        @relation("JobCandidates")
}

model Language {
  id        Int     @id @default(autoincrement())
  profileId Int
  language  String
  Profile   Profile @relation(fields: [profileId], references: [id])
}

model Patent {
  id                Int       @id @default(autoincrement())
  profileId         Int
  title             String?
  issuer            String?
  issuedOn          DateTime?
  description       String?
  applicationNumber String?
  patentNumber      String?
  url               String?
  Profile           Profile   @relation(fields: [profileId], references: [id])
}

model PeopleAlsoViewed {
  id        Int     @id @default(autoincrement())
  profileId Int
  link      String?
  name      String?
  summary   String?
  location  String?
  Profile   Profile @relation(fields: [profileId], references: [id])
}

model Product {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique
  companyId              Int
  CompanyProductCategory CompanyProductCategory[]
  Company                Company                  @relation(fields: [companyId], references: [id])
}

model Profile {
  id                         Int                 @id @default(autoincrement())
  public_identifier          String?             @unique
  first_name                 String?
  last_name                  String?
  full_name                  String?
  city                       String?
  state                      String?
  country                    String?
  country_full_name          String?
  summary                    String?
  profile_pic_url            String?
  background_cover_image_url String?
  headline                   String?
  occupation                 String?
  connections                Int?
  follower_count             Int?
  recommendations            String[]
  skills                     String[]
  last_updated               DateTime?
  linkedin_profile_url       String
  email                      String?
  phone                      String?
  AccomplishmentOrg          AccomplishmentOrg[]
  Activity                   Activity[]
  Article                    Article[]
  CandidateStage             CandidateStage[]
  Certification              Certification[]
  Course                     Course[]
  Education                  Education[]
  Experience                 Experience[]
  Group                      Group[]
  HonourAward                HonourAward[]
  Language                   Language[]
  Patent                     Patent[]
  PeopleAlsoViewed           PeopleAlsoViewed[]
  Project                    Project[]
  Publication                Publication[]
  SimilarProfile             SimilarProfile[]
  TestScore                  TestScore[]
  VolunteerWork              VolunteerWork[]
  Job                        Job[]               @relation("JobCandidates")
}

model Project {
  id          Int       @id @default(autoincrement())
  profileId   Int
  title       String?
  description String?
  url         String?
  startsAt    DateTime?
  endsAt      DateTime?
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model Publication {
  id          Int       @id @default(autoincrement())
  profileId   Int
  name        String?
  publisher   String?
  publishedOn DateTime?
  description String?
  url         String?
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model SimilarProfile {
  id        Int     @id @default(autoincrement())
  profileId Int
  name      String?
  link      String?
  summary   String?
  location  String?
  Profile   Profile @relation(fields: [profileId], references: [id])
}

model TestScore {
  id          Int       @id @default(autoincrement())
  profileId   Int
  name        String?
  score       String?
  dateOn      DateTime?
  description String?
  Profile     Profile   @relation(fields: [profileId], references: [id])
}

model VolunteerWork {
  id                        Int       @id @default(autoincrement())
  profileId                 Int
  cause                     String?
  company                   String?
  companyLinkedinProfileUrl String?
  description               String?
  endsAt                    DateTime?
  logoUrl                   String?
  startsAt                  DateTime?
  title                     String?
  Profile                   Profile   @relation(fields: [profileId], references: [id])
}

enum CompanySize {
  SEED
  STARTUP
  SCALEUP
  MID_SIZE
  BIG
  HUGE
}

enum Stage {
  APPLIED
  ADDED
  SCREENING
  SCREENED
  FIRST_INTERVIEW
  MID_INTERVIEWS
  FINAL_INTERVIEW
  HIRED
}
